{
    "history": "Test  Guass Newton algorithm. Perturbing 6 parameters ",
    "svnInfo": "Revision: $Revision$ URL: $URL: https://svn-kerberos.ecdf.ed.ac.uk/repo/geos/OptClim/trunk/Configurations/example.json $ Date: $Date$",
    "svnInfo_comment": "Information automatically updated by SVN -- please don't edit",
    "Developer_comment": "StudyConfig.py provides methods that work with this configuration file. Remember to change them if you change structure of this.",
    "version": 2,
    "version_comment": "Version ID",
    "Name": "gaussN6",
    "Name_comment": "Study Name",
    "baseRunID": "gn",
    "baseRunID_comment": "base for runID. Only first two characters are generally used.",
    "runTime": 10000,
    "runTime_comment": "Time in seconds for run. Run for a 6 years 4 months should take about 9200 seconds ~ 3 hours.",
    "runCode": null,
    "runCode_comment": "Project code to run job under.",
    "machineName": "eddie",
    "machineName_comment": "Name of machine to submit runs to",
    "modelName": "HadCM3",
    "modelName_comment": "Name of model that is ran",
    "optimiseFunction": null,
    "optimiseFunction_comment": "Name of optimisation function to run. null gives default",
    "fakeFunction": null,
    "fakeFunction_comment": "Name of fake function to use for testing. null gives default. Your fake fn should match your postProcess function which it fakes.",
    "runUpgrade_vn3": "For vn3 put all runXXX & function stuff in a runInfo block.",
    "Parameters": {
        "comment": "Information relevant to parameters.",
        "defaultParams": {
            "comment": "Default parameter values for HadAM3. null values or not set mean don't modify. Checked against wiki 11/5/17 ",
            "CT": 0.0001,
            "EACF": 0.5,
            "ENTCOEF": 3.0,
            "ICE_SIZE": 3e-05,
            "RHCRIT": 0.7,
            "VF1": 1.0,
            "CW_LAND": 0.0002,
            "CW_LAND_comment": "Seed parameter which also affects CW_SEA",
            "DYNDIFF": 12.0,
            "DYNDIFF_comment": "Seed parameter which affects DIFF_COEFF, DIFF_COEFF_Q, DIFF_EXP & DIFF_EXP_Q",
            "KAY_GWAVE": 20000.0,
            "KAY_GWAVE_comment": "Seed parameter which also affects KAY_LEE_GWAVE",
            "ASYM_LAMBDA": 0.15,
            "CHARNOCK": 0.012,
            "CHARNOCK_comment": "Note this is Murphy et al, 200X and is different from that reported in Yamazaki et al, 2013",
            "G0": 10.0,
            "Z0FSEA": 0.0013,
            "ALPHAM": 0.5,
            "ALPHAM_comment": "Seed parameter which affects DTICE and ALPHAM",
            "START_TIME": null,
            "START_TIME_comment": "Start_time as 3 to 6 element array [YYYY,MM,DD,hh,mm,mm]",
            "RUN_TARGET": null,
            "RUN_TARGET_comment": "Run target -- time as 3 to 6 element array to run for. ",
            "INDIRECT_AEROSOL_comment": "Params for indirect aerosol. Model is n_drop = IA_N_INFTY*(1-exp(-IA_KAPPA_SCALE*N_AERO/IA_N_INFTY)) where N_AERO is no of aerosol drops and n_drop is no of cld drolets.",
            "IA_N_DROP_MIN": 3.5e7,
            "N_DROP_MIN_comment": "Minimum number of drops",
            "IA_N_INFTY": 3.75E8,
            "IA_N_INFTY_comment": "No of cld drops at infinite aerosol in aerosol cloud droplet model",
            "IA_KAPPA_SCALE":0.9375,
            "IA_KAPPA_SCALE_comment":"Scaling in exponential for aerosol cloud droplet model",
            "SCAVENGE": 1.0,
            "SCAVENGE_comment": "How much to scale up or down the two scavenging parameters (L0 & L1)"
        },
        "initParams": {
            "comment": "Intial values for parameters to be optimised. Set to null to use default values. Values below are for HadAM3-14#1 ",
            "CT": 2e-4,
            "VF1":null,
	"IA_N_DROP_MIN": null,
	"IA_N_INFTY": null,
	"IA_KAPPA_SCALE":null,
	"SCAVENGE": null
        },
        "initScale": false,
        "initScale_comment": "If true then startParams range from 0 to 1 where 0 means min value; 1 max value.",
        "fixedParams": {
            "comment": " List of parameters and values that are fixed and not modified in optimisation. Set to null to use default values"
        },
        "fixedScale": false,
        "fixedScale_comment": "If true then scalable fixedParams range from 0 to 1 where 0 means min value; 1 max value.",
        "minmax": {
            "comment": "Defines the minimum and maximmum ranges for the parameters. Must be defined for ALL parameters used in GN optimisation,",
            "CT": [
                5e-05,
                0.0004
            ],
            "EACF": [
                0.5,
                0.7
            ],
            "ENTCOEF": [
                0.6,
                9.0
            ],
            "ICE_SIZE": [
                2.5e-05,
                4e-05
            ],
            "RHCRIT": [
                0.6,
                0.9
            ],
            "VF1": [
                0.5,
                2.0
            ],
            "CW_LAND": [
                0.0001,
                0.002
            ],
            "DYNDIFF": [
                6.0,
                24.0
            ],
            "KAY_GWAVE": [
                10000.0,
                20000.0
            ],
            "ASYM_LAMBDA": [
                0.05,
                0.5
            ],
            "CHARNOCK": [
                0.012,
                0.02
            ],
            "G0": [
                5.0,
                20.0
            ],
            "Z0FSEA": [
                0.0002,
                0.005
            ],
            "ALPHAM": [
                0.5,
                0.65
            ],
            "IA_N_DROP_MIN": [5e6, 50e6 ],
	    "IA_N_INFTY": [10e6,1000e6],
            "IA_KAPPA_SCALE": [0.0,0.94],
	    "SCAVENGE": [0.333333,3.0]
        },
        "steps": {
            "comment": "Steps for perturbations -- norm around 10% of the range. If not specified 10% will be used. Values below are from 7 parameter cases described in Tett et al, 2017 (GMDD. They are not particualry optimal",
            "CT": 1e-05,
            "EACF": 0.02,
            "ENTCOEF": 0.15,
            "ICE_SIZE": 1.5e-06,
            "RHCRIT": 0.01,
            "VF1": 0.1,
            "CW_LAND": 0.0002,
            "DYNDIFF": 2.0,
            "KAY_GWAVE": 400000.0,
            "ASYM_LAMBDA": 0.15,
            "CHARNOCK": 0.003,
            "G0": 4.0,
            "Z0FSEA": 0.002,
            "ALPHAM": 0.06
        },
        "optimumParams": {
            "VF1": 1.8976063845156457,
            "RHCRIT": 0.7817307179979658,
            "ICE_SIZE": 3.441283082448739e-05,
            "ENTCOEF": 4.026044577119166,
            "EACF": 0.6497809616335941,
            "CT": 0.0004,
            "CW_LAND": 0.0001,
            "DYNDIFF": 19.911893529100187,
            "KAY_GWAVE": 20000.0,
            "ASYM_LAMBDA": 0.5,
            "CHARNOCK": 0.017881913422340627,
            "G0": 5.0,
            "Z0FSEA": 0.0031231521381503294,
            "ALPHAM": 0.65
        }
    },
    "study": {
        "comment": "Parameters that specify the study. Used by framework and not by optimisation routines",
        "referenceModelDirectory": "$OPTCLIMTOP/Configurations/HadAM3_ed3_SL7_15m",
        "referenceModelDirectory_comment": "Directory where reference model configuration exists. Default is START_DIR/start",
        "covariance": {
            "comment": "Covariance matrices and operations on them. If CovObsErr and CovIntVar are *both* specified then CovTotal will be computed from them",
            "CovTotal": "$CMIP6/Optimisation/covar.csv",
            "CovTotal_Comment": "Name of file containing Covariance Matrix for total Error.",
            "CovTotalDiagonalise": false,
            "CovTotalDiagonalise_comment": "If true diagonalise the total covariance matrix",
            "CovIntVar": null,
            "CovIntVar_Comment": "Name of file containing Covariance Matrix of Internal Variability. ",
            "CovIntVarDiagonalise": false,
            "CovIntVarDiagonalise_comment": "If true diagonalise the internal variability covariance matrix",
            "CovObsErr": null,
            "CovObsErr_Comment": "Name of file containing Covariance Matrix for Observational Error. ",
            "CovObsErrDiagonalise": true,
            "CovObsErrDiagonalise_comment": "If true diagonalise the Observational Error covariance matrix"
        },
        "ObsList": [
	    "RSR_NHX",
	    "RSR_TROPICS",
	    "RSR_SHX",
	    "OLR_NHX",
	    "OLR_TROPICS",
	    "OLR_SHX",
	    "netflux_GLOBAL",
	    "RSRC_NHX",
	    "RSRC_TROPICS",
	    "RSRC_SHX",
	    "OLRC_NHX",
	    "OLRC_TROPICS",
	    "OLRC_SHX",
	    "Lprecip_NHX",
	    "Lprecip_TROPICS",
	    "Lprecip_SHX",
	    "LAT_NHX",
	    "LAT_TROPICS",
	    "LAT_SHX",
	    "RH@500_NHX",
	    "RH@500_TROPICS",
	    "RH@500_SHX",
	    "TEMP@500_NHX",
	    "TEMP@500_TROPICS",
	    "TEMP@500_SHX",
	    "MSLP_NHX_DGM",
	    "MSLP_TROPICS_DGM",
	    "Reff_NHX",
	    "Reff_TROPICS",
	    "Reff_SHX"
	],
        "ObsList_comment": "List of Observations that Algorithm uses which should be generated by post processing of model",
        "constraintName": "netflux_GLOBAL",
        "constraintName_comment": "Name of constraint variable -- target value defined by targets/constraintName. "
    },
    "optimise": {
    "comment": "Parameters to control optimisation. This is used within optimisation routines AND not by framework",
    "algorithm": "GaussNewton",
    "algorithm_comment": "Algorithm to be used.   See Optimise.py for more details.",
    "alphas": [
      1.0,
      0.7,
      0.3
    ],
    "alphas_comment":"Alpha values used in linesearch",
    "sigma": true,
    "sigma_comment": "Have constraint on if true",
    "mu": 0.01,
    "mu_comment":"The inverse weighting given to the constraint -- it gets wt 1/(2mu)",
    "covar_cond":null,
    "covar_cond_comment": "This might be a property of the covariance matrices and so could be moved to that block in the config file. ",
    "reg_crit_cond":null,
    "reg_crit_cond_comment":"When condition number of Hessian is greater than this then we regularize it. Default is 10^10",
    "reg_pow_range":null,
    "reg_pow_range_comment":"Range of powers used for regularisation when computing Hessian. Default is 10^-7, 10^-2",
    "prob_int": 0.5,
    "prob_int_comment": "Critical Probability that new state is consistent with old state for termination.",
    "prob_obs": 0.5,
    "prob_obs_comment": "Critical Probability that new state is consistent with Observations for termination.",
    "nrandom":null,
    "nrandom_comment":"If non null the number of random perturbations to make. If null then all parameters are perturbed",
    "deterministicPerturb":null,
    "deterministicPerturb_comment":"Make random number generator deterministic based on the parameters being perturbed if true. Default is true",
    "maxFails": null,
    "maxFails_comment":"Maximum number of failures needed for termination. Default is 0 and is only used if nrandom is set",
    "minImprovement": null,
    "minImprovement_comment": "Minimum error reduction to proceed. Default is 0"
},
    "postProcess": {
        "comment": "Options to control post processing. Details depend on your post processing script. TO UPDATE",
        "script": "$CMIP6/Optimisation/comp_sim_obs.py",
        "script_comment": "/home/s1768775/Mphys/HadCM3_CMIP6/Optimisation/comp_sim_obs.py (old was $OPTCLIMTOP/um45/obs_in_nc/comp_sim_obs.py) Full path name -- including any environment variables you might have -- to postprocessing script",
        "outputPath": "observations.json",
        "outputPath_comment": "Name of output path relative to model dir and should be one of .nc, .json or .csv. Default is observations.nc. ",
        "note": "Specify mask_file -- file where l/s mask is, name of mask, start and end times",
        "mask_file": "$CMIP6/ancil_data/HadAM3_N48_land.nc",
        "mask_file_comment": "Path to mask file. Example value is for N48 HadAM3",
        "mask_name": "lsm",
        "mask_name_comment": "Name of mask variable. Depends on file..",
        "start_time": "2011-01",
        "start_time_comment": "Start time as ISO std string. ",
        "end_time": "2015-12",
        "end_time_comment": "End time as str of ISO std string"

    },
    "targets": {
        "comment": "Observed targets for optimisation. Should include constraint value. ",
	"RSR_NHX": 100.89055137054159,
	"RSR_TROPICS": 93.88832598485772,
	"RSR_SHX": 107.99737301533597,
	"OLR_NHX": 222.52873203457747,
	"OLR_TROPICS": 260.04433816037607,
	"OLR_SHX": 215.29745040262304,
	"netflux_GLOBAL": 1.1918167941533917,
	"RSRC_NHX": 57.65331844161845,
	"RSRC_TROPICS": 50.835295132210966,
	"RSRC_SHX": 54.096608369884166,
	"OLRC_NHX": 246.97730188430512,
	"OLRC_TROPICS": 289.9904116195803,
	"OLRC_SHX": 242.1102137685394,
	"Lprecip_NHX": 1.6702105883960352e-05,
	"Lprecip_TROPICS": 3.289635052088178e-05,
	"Lprecip_SHX": 1.9642864929805836e-05,
	"LAT_NHX": 275.58299338423507,
	"LAT_TROPICS": 297.20423430945453,
	"LAT_SHX": 287.52566696273084,
	"RH@500_NHX": 53.10974894898929,
	"RH@500_TROPICS": 34.62893734335154,
	"RH@500_SHX": 52.24517178378312,
	"TEMP@500_NHX": 251.29715510298064,
	"TEMP@500_TROPICS": 266.5429220787813,
	"TEMP@500_SHX": 248.90842881661428,
	"MSLP_NHX_DGM": 328.63687717462017,
	"MSLP_TROPICS_DGM": 186.75037973168946,
	"Reff_NHX": 12.52193137772159,
	"Reff_TROPICS": 15.464547441433881,
	"Reff_SHX": 13.483756013080319
    },
    "scalings": {
        "comment": "Scalings on observables -- only defined when not 1.0",
        "lprecip_nhx": 86400.0,
        "lprecip_tropics": 86400.0,
        "lprecip_shx": 86400.0,
        "mslp_gm": 0.01,
        "mslp_nhx_dgm": 0.01,
        "mslp_tropics_dgm": 0.01
    },
    "standardModel": {
        "SimulatedValues": {
            "comment": "Values from Initial Cond ensemble -- used for display",
            "rsr_nhx": 104.828645378,
            "rsr_tropics": 96.1125810912,
            "rsr_shx": 106.220769668,
            "rsr_gm": 100.640785304,
            "olr_nhx": 219.239170954,
            "olr_tropics": 260.168543324,
            "olr_shx": 212.43007422,
            "olr_gm": 238.839351859,
            "lat_nhx": 273.33065608,
            "lat_tropics": 295.525024032,
            "lat_shx": 286.028285954,
            "lprecip_nhx": 1.93355069031e-05,
            "lprecip_tropics": 3.31722810623e-05,
            "lprecip_shx": 2.19885246512e-05,
            "mslp_nhx_dgm": 500.077320213,
            "mslp_tropics_dgm": 145.528208095,
            "temp@500_nhx": 250.103101527,
            "temp@500_tropics": 266.024844065,
            "temp@500_shx": 247.127341727,
            "rh@500_nhx": 57.1694930762,
            "rh@500_tropics": 35.4667676984,
            "rh@500_shx": 57.1532300099,
            "netflux_global": 1.11525220386
        }
    }
}
